<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="David" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Regular Expression Searches</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Regular Expression Searches</text></para>
    </header>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">Support for regular expressions is common in text editing software and several programming languages. When the option to use them is enabled in a search dialog, certain character sequences in the </text><text style="font-family:Arial; font-size:9pt; font-weight:bold; color:#000000;" translate="true">Find what </text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">field are treated as wildcards, or codes that represent classes of characters rather than specific characters. The codes are formed with the help of </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">metacharacters</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> belonging to the sequence </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\ ^ $ . | [ ] ( ) { } ? + *</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">. Another useful term is </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">regex</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">, the short name for regular expression. Unfortunately, not all regex search engines support the same codes. A good introduction to the Perl 5 flavor recognized by Walls is</text><text styleclass="Normal" translate="true">&#32;</text><link displaytype="text" defaultstyle="true" type="weblink" href="http://www.regular-expressions.info/tutorial.html" target="_blank" style="font-family:Arial; font-size:9pt; text-decoration:underline; color:#0000ff;" translate="true">Jan Goyvaerts&apos; tutorial</link><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">.</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">The examples below are not an adequate introduction but they can at least serve as a memory refresher. They also demonstrate the use of codes that another search engine might handle differently. You can try them out on a Walls data file or project branch by cutting and pasting them into a </text><link displaytype="text" defaultstyle="true" type="topiclink" href="SearchOperations" style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">search dialog</link><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">.</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">Suppose we want to find all vertical shots in our survey data assuming that the vertical angle measurement is the fifth item on a line:</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; font-weight:bold; color:#000000;" translate="true">Find what: </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">^\s*(\S+\s+){4}[+-]?90(\.0*)?(\s|$)</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">We&apos;ve constructed this pattern by using appropriate wildcards for the character sequences we want it to match -- sequences that appear contiguously left-to-right on a line. To match the fifth line item we must actually begin matching characters at the line&apos;s start:</text></para>
    <para style="tabstops:24px left ;"></para>
    <list id="2" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ; font-family:Symbol; font-size:9pt; color:#000000;">
      <li style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">The circumflex (</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">^</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">) matches the start-of-line condition.</text></li>
      <li style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ;"><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\s*</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> matches zero or more consecutive whitespace characters (tabs and spaces). (</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\t </text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">would have matched a single tab character.)</text></li>
    </list>
    <list id="3" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ; font-family:Symbol; font-size:9pt; color:#000000;">
      <li style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ;"><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">(\S+\s+){4}</text><text style="font-family:Arial; font-size:9pt; color:#7f0000;" translate="true">&#32;</text><text styleclass="Normal" translate="true">matches four repetitions of one or more non-whitespace characters (</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\S+</text><text styleclass="Normal" translate="true">) followed </text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">by one or more whitespace characters (</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\s+</text><text styleclass="Normal" translate="true">).</text></li>
    </list>
    <list id="2" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ; font-family:Symbol; font-size:9pt; color:#000000;">
      <li style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ;"><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">[+-]?</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> matches one instance or zero instances of one of the characters in brackets, in this case either + or -. </text></li>
      <li style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ;"><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">90(\.0*)?</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> matches one of 90, 90., 90.0, 90.00, etc. The decimal point is </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">escaped</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> with a backslash since a period by itself is a metacharacter that matches </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">any</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> character.</text></li>
    </list>
    <list id="3" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ; font-family:Symbol; font-size:9pt; color:#000000;">
      <li style="text-indent:-13px; margin-left:13px; tabstops:13px left,24px left ;"><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">(\s|$)</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> matches either a whitespace character (</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\s</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">) or the end-of-line condition (</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">$</text><text styleclass="Normal" translate="true">). The vertical bar (</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">|</text><text styleclass="Normal" translate="true">) separates alternatives. </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">(Bill|William)</text><text styleclass="Normal" translate="true"> would match either Bill or William.)</text></li>
    </list>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">The pattern is complex because we&apos;re trying to capture all possible formats for a vertical shot while eliminating non-qualifying matches. Although not used in this example, a few additional codes besides </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\s</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> and </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\S</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> are available for matching generic classes of characters. </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\d </text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">and </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\D</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> match digits and non-digits, respectively. </text><text style="font-family:Arial; font-size:9pt; color:#7f0000;" translate="true">&#32;</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\w </text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">and </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\W</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> match word and non-word characters, where a word is any mixture of digits, letters, and the underscore character (_). Some codes match </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">conditions</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> that exist before or after an examined character. </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\b</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> asserts the presence of a </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">word boundary</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> while </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\B</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> asserts the lack of one. As with the line start (</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">^</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">) and line end (</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">$</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">) conditions, no character is matched, or &quot;consumed&quot;, with </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\b</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> or </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\B</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">. In Walls dialogs the option </text><text style="font-family:Arial; font-size:9pt; font-weight:bold; color:#000000;" translate="true">Match whole words</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> is equivalent to prefixing and suffixing the target string with </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">\b</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">.</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">The element </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">[+-] </text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">in this example deserves futher explanation. A bracketed sequence of characters, a </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">character class,</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> matches any one character belonging to the set. As part of such a sequence most characters will be interpreted literally, not as metacharacters. Exceptions are </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">^</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">, </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">-</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">, and </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">\</text><text styleclass="Normal" translate="true">, </text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">depending on their placement. For example, the character class </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">[a-zA-Z]</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> will match any alphabetic character due to the placement of minus signs to define </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">character ranges</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">. In character class </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">[+-]</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> neither the plus sign nor the minus sign has a special meaning. Codes that match conditions</text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">,</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> like </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">\b</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">, are not recognized as such in a character class, but codes representing characters, like </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">\s</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">, have the same meaning inside brackets as they do outside. When a circumflex (</text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">^</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">) immediately follows the opening bracket, a </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">negated</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> character class is formed, one that matches any character as long as it&apos;s </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">not</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> one of the remaining characters in brackets.</text></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">&#32;</text></para>
    <para style="tabstops:24px left ;"><text styleclass="Normal" translate="true">The Walls search function is implemented so that it looks for matching text that resides entirely within individual lines. The expression </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">^$</text><text styleclass="Normal" translate="true">, however, won&apos;t match an empty line since empty lines are completely ignored. </text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">The next example selects the two station names of a vector data line, presumably the first two items, while skipping over line comments and directives. The replacement string swaps name positions and illustrates how a replacement string can be constructed from portions of the matched text:</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text styleclass="Normal" style="font-weight:bold;" translate="true">Find what: </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true"> ^(\s*)([^;#]\S*)(\s+)(\S+)</text></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; font-weight:bold; color:#000000;" translate="true">Replace with: </text><text style="font-family:Arial; font-size:9pt; color:#7f0000;" translate="true">&#32;</text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">\1\4\3\2</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">The subexpression </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">[^;#]</text><text styleclass="Normal" translate="true"> i</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">s a negated character class that matches anything but a semicolon or pound sign. In this context it can&apos;t match a whitespace character either since any such character will have been consumed by the preceding </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\s*.</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> The sets of parentheses in the whole expression are needed to form groups that can be referenced in the replacement string. Up to nine left-to-right counted parenthesized groups, possibly nested, can be referenced using codes </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\1</text><text style="font-family:Arial; font-size:9pt; color:#7f0000;" translate="true">&#32;</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">through </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\9</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">. (The entire matched text, the selected string, is referenced by </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\0</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">.) Similarly, a group can be </text><text style="font-family:Arial; font-size:9pt; font-style:italic; color:#000000;" translate="true">backreferenced</text><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> in the regular expression itself.</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text styleclass="Normal" translate="true">The final example is the sort of operation you might conceivably find useful when working with survey data:</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text styleclass="Normal" style="font-weight:bold;" translate="true">Find what: </text><text style="font-family:Arial; font-size:9pt; color:#7f0000;" translate="true">&#32;</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">(^|[\s,:;])A(\d)</text></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; font-weight:bold; color:#000000;" translate="true">Replace with: </text><text style="font-family:Arial; font-size:9pt; color:#7f0000;" translate="true">&#32;</text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">\1AB\2</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text styleclass="Normal" translate="true">This would change A-prefixed names (A1, A321, etc.) to AB-prefixed names (AB1, AB321, etc.) provided their positions in the file are plausible for a station name. The expression, </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">(^|[\s,:;])</text><text styleclass="Normal" translate="true">, insures that immediately preceding the letter A is either the start-of-line condition or a character in the bracketed set (whitespace, comma, colon, or semicolon). The </text><text style="font-family:Arial; font-size:9pt; color:#008000;" translate="true">(\d)</text><text styleclass="Normal" translate="true"> insures that a digit immediately follows A, the parentheses allowing it to be referenced in the replacement string as </text><text style="font-family:Arial; font-size:9pt; color:#007f00;" translate="true">\2</text><text styleclass="Normal" translate="true">.</text></para>
    <para style="tabstops:24px left ;"></para>
    <para style="tabstops:24px left ;"><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true">Walls takes advantage of the excellent code library, </text><link displaytype="text" defaultstyle="true" type="weblink" href="http://www.pcre.org/" target="_blank" style="font-family:Arial; font-size:9pt; text-decoration:underline; color:#0000ff;" translate="true">PCRE</link><text style="font-family:Arial; font-size:9pt; color:#000000;" translate="true"> (Perl Compatible Regular Expressions), written by Philip Hazel. The documentation for PCRE contains the most complete description of the regex flavor supported by Walls.</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
