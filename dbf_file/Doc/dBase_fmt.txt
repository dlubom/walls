Here's what I used as technical ref in my work with shape files to build a dbf
engine.  I have forgotten the source of this doc, but it was probably
http://www.pstruh.cz/help/RSConv/library.htm . Let me know if you think I
might know something that will help.

dBASE III,IV,5 DBF file format

dBASE file formats as listed in the dBASE III PLUS, IV, 5 ( for DOS and
Windows ) manuals.

The data file header structure for dBASE III PLUS table file.

The data file header structure for dBASE IV 2.0 table file.

The data file header structure for dBASE 5.0 for DOS table file.

The data file header structure for dBASE 5.0 for Windows table file.

  _____

A. The data file header structure for dBASE III PLUS table file.

The table file header:
Byte  Contents  Description
0 	1 byte		Valid dBASE III PLUS table file (03h without a memo (.DBT file; 83h with a memo).
1-3	3 bytes		Date of last update; in YYMMDD format.
4-7	32-bit number	Number of records in the table.
8-9	16-bit number	Number of bytes in the header.
10-11	16-bit number	Number of bytes in the record.
12-14	3 bytes		Reserved bytes.
15-27	13 bytes	Reserved for dBASE III PLUS on a LAN.
28-31	4 bytes		Reserved bytes.
32-n	32 bytes	Field descriptor array (the structure of this array is each shown below)
n+1	1 byte		0Dh stored as the field terminator.

n above is the last byte in the field descriptor array. The size of the
array depends on the number of fields in the table file.

Table Field Descriptor Bytes
Byte	Contents  Description
0-10	11 bytes	Field name in ASCII (zero-filled).
11	1 byte		Field type in ASCII (C, D, L, M, or N).
12-15	4 bytes		Field data address (address is set in memory; not useful on disk).
16	1 byte		Field length in binary.
17	1 byte		Field decimal count in binary.
18-19	2 bytes		Reserved for dBASE III PLUS on a LAN.
20	1 byte		Work area ID.
21-22	2 bytes		Reserved for dBASE III PLUS on a LAN.
23	1 byte		SET FIELDS flag.
24-31	1 byte		Reserved bytes.

Table Records

The records follow the header in the table file. Data records are preceded
by one byte, that is, a space (20h) if the record is not deleted, an
asterisk (2Ah) if the record is deleted. Fields are packed into records
without field separators or record terminators. The end of the file is
marked by a single byte, with the end-of-file marker, an OEM code page
character value of 26 (1Ah). You can input OEM code page data as indicated
below.

Allowable Input for dBASE Data Types
Data Type  Data Input
C (Character)	All OEM code page characters.
D (Date)	Numbers and a character to separate month, day, and year (stored
		internally as 8 digits in YYYYMMDD format).
N (Numeric)	 - . 0 1 2 3 4 5 6 7 8 9
L (Logical)	? Y y N n T t F f (? when not initialized).
M (Memo)	All OEM code page characters (stored internally as 10 digits
		representing a .DBT block number).

Binary, Memo, and OLE Fields And .DBT Files
===========================================

Memo fields store data in .DBT files consisting of blocks numbered
sequentially (0, 1, 2, and so on). The size of these blocks are internally
set to 512 bytes. The first block in the .DBT file, block 0, is the .DBT
file header.

Memo field of each record in the .DBF file contains the number of the
block (in OEM code page values) where the field's data actually begins. If
a field contains no data, the .DBF file contains blanks (20h) rather than
a number.

When data is changed in a field, the block numbers may also change and the
number in the .DBF may be changed to reflect the new location.

This information is from the Using dBASE III PLUS manual, Appendix C.

  _____

Mark Phillips
Senior Software Engineer
University of Oklahoma
GEO Information Systems
1818 W. Lindsey
Suite A105
Norman, OK 73069

405.325.3131 ext 237
www.geo.ou.edu