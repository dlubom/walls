NOTES for CSS2SRV v2.0, D. McKenzie, May 28,1999
================================================
CSS2SRV will create Walls raw data files (type .SRV) from the data files
native to Compass (CSS format), which often have extension .DAT.
Optionally, the program will also generate an associated project script
(type .PRJ) that Walls can immediately open.

This function will soon be built into Walls, but for now you must run
CSS2SRV at a command line prompt under Windows 95/98 or Windows NT. For
information on usage and options, give the command "CSS2SRV" without
arguments. This will produce the output shown at the end of these notes.

As far as I know, a warning-free translation of DAT files to SRV files is
complete and accurate, meaning that virtually all available information is
written to the SRV files in a form usable by Walls. (Put another way, it
would be easy to reverse the process, creating from the exported SRV files
essentially identical copies of the original DAT files.) However, unlike the
DAT files themselves (with measurements in feet and degrees), the SRV files
closely resemble what is seen in the Compass survey editor, with all
measurements having their original form and units. This was not the case
with the first version of CSS2SRV.

MESSAGES
========
When you run the program to process a large data set for the first time,
there's a possibilty you'll see, as I have, many warning messages scroll off
the screen -- for example, warnings about out-of-range measurements, bad
dates, and so forth. (Compass won't complain about an inclination of "-3535"
already in a DAT file.) In this case, simply execute the same command again,
but append ">errors.txt" to the command line. Then you can use Notepad or
whatever to view the errors.txt file. This will show you the relevant DAT
file name and line number. Alternatively, open the Walls project and do a
project-wide search for the warning prefix, ";***".

The program lets slip by some kinds of problems that will be detected later
with a Walls compilation. If you have backsights, the most common
compilation warning will probably be FS/BS mismatches. You may want to
change the default 5-degree tolerances by entering, say, "TypeAB=N,10" on
the Compile Options page of the survey file's Properties dialog.

NEW FEATURES
============
Listed below are features of CSS2SRV v2.0 not present in v1.0, along with
some additional notes on usage:

1) It handles "redundant backsights", which were not supported by Compass
   when CSS2SRV v1.0 was written. Curiously, Compass still allows only one
   set of instrument corrections and unit assignments. We have to assume
   that the backsight and foresight instruments are the same.

2) Option "-p <prjfile>" will produce a simple project script (PRJ file)
   with all the generated SRV files attached. You can immediately try out
   the result in Walls while avoiding the step of initializing a new
   project. Like Compass projects, however, the project "tree" is only one
   level deep. Also, no relationship between data files is implied. For
   multi-file projects, Compass might use special ".MAK" files for storing
   crucial information, such as globally unique names (links) and fixed
   point locations. Since different stations in different DAT files could
   conceivably have matching names, Walls might need the MAK file
   information if the entire project (the root folder) is to be compiled
   correctly. Since CSS2SRV currently doesn't examine MAK files, some
   preparation on your part might be necessary. For example, you may need
   to assign name prefixes to avoid conflicts. Also, you'll probably want
   to assign a geographical reference and define UTM locations within the
   SRV files themselves.
 
3) Compass now supports 12 rather than 8 characters in a station name.
   Since Walls allows just 8 characters in a "base" name, a prefixed name
   (containing a colon) will be generated as necessary during conversion.
   It may be that the long names already have colons (the result of an
   earlier SEF export from Walls), in which case the option "-c" to
   preserve colons will be useful. By default, ":" is replaced with "|".
   Also, to avoid conflicts with the SRV format, "#" is replaced with "~",
   ";" is replaced with "^", and "," is replaced with "`". If this causes
   problems, please let me know and I'll make these substitutions
   customizable. Remember that name prefixes show up on Walls listings, and
   they can be included or omitted from station labels on maps.
   
4) In the generated SRV files, a #Date directive always immediately follows
   a "#Units Decl=..." directive, making it possible to override the
   preassigned declinations with those automatically calculated by Walls
   using date and geographical location. In a large, complex survey (many
   years and many loops) it could be interesting to see the effect on
   statistics (system UVEs) of turning on the "Derive from #DATE" option.
   
5) The conversion handles underwater surveys appropriately, where depth
   measurements replace inclinations. Since there are no explicit examples
   in the Walls help file, exporting such a survey from Compass is a good
   way to see what an underwater survey should look like in Walls.
   
MOVING DATA IN THE OTHER DIRECTION
==================================
Unfortunately, I found differences between the Compass and Walls data
formats that would make the reverse operation, converting the raw data of
existing Walls projects to Compass projects, too problematic to justify
another export function in WALLS. The SEF (SMAPS) route is still available,
but admittedly the exported result is partially processed, not raw, and many
attributes of the data are lost. (Some limitations of the SEF export are
described in the Walls online help.)

Compass uses an underlying native format that's nicely defined in about one
page of documentation. This simplifies the task of getting data out
(CSS2SRV), but it presents a problem if you want to bring vector data into
Compass while preserving their original form. The CSS (DAT) files have a
"FORMAT:" specification that might allow one to reconstruct, from data
stored in feet and degrees, the original measurement forms, but only if the
Compass editor supports those specific forms. Right now the supported set is
relatively small. For example, you're out of luck if you use a mills
compass, vertical adjustments or corrections, or instrument and target
heights with an associated taping method. Another problem is that Walls,
with its text editor interface, allows users to change all sorts of
attributes (dates, units, etc.) on a shot-by-shot basis. To preserve these
attributes in data exported to programs like Compass or SMAPS we would have
to artificially create a lot of named surveys.

Assuming we could handle the basic shot data, we would still have to filter
out (or transform in some way) the project tree hierarchy, station name
prefixes, and much of the station and vector attribute information stored in
the SRV files (some of which I consider pretty basic). The bottom line is
that I see little chance of improving upon the SEF export option already
provided.

Compass has its own set of unique features, including some nice graphics
capabilities. It's also easier to learn. (Using it as a front end to Walls
is feasible now.) Of course, I also believe Walls has advantages to offer,
especially in the realm of basic data management and processing. I would
therefore consider an option to export processed and adjusted data directly
to Compass PLT files. Please let me know if you would find this feature
useful.

OUTPUT FROM RUNNING CSS2SRV WITH NO ARGUMENTS
=============================================

CSS2SRV v2.0 - Convert Files from Compass to Walls 2.0 Format

USAGE: css2srv [-s] [-u] [-c] [-p <prjfile>] <filespec[.DAT]> [...]

Creates Walls .SRV files from Compass data files matching one or more file
specification arguments (default extension .DAT). For each file read as
input, a new file with the the same base name but with extension .SRV will
be created in the same directory as the first input file, possibly
overwriting a preexisting SRV file. Examples:

css2srv -u fulford fulsurf
css2srv h:\wcompass\*.dat
css2srv -s -p \walls\data\Lechuguilla d:\caves\lech95\*.dat

OPTIONS: Use "-p <prjfile>" to also create a single-level project script
(extension .PRJ) that can be immediately opened and manipulated in Walls.
In this case, <prjfile> will determine the location of all created files.
By default, each named survey within a file defines a separate segment,
allowing selection of individual surveys when compiling statistics and
assigning map attributes. Option -s will turn off this feature. Use -c if
colons in names should be preserved as prefix separators. Finally, use -u
to include, for appearances sake, unit suffixes on all measurements.

If you need help or have suggestions, please contact davidmck@bga.com.
======================================================================

   
   